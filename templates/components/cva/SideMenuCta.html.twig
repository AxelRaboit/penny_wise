{% import 'components/macro/cta_macros.html.twig' as buttonMacros %}

{% props color = 'quaternary', size = 'md', fullWidth = false, borderStyle = 'solid', route = null, routeParams = {}, label = '', icon = '', iconPosition = 'left', id = '', title = '', disabled = false, extraClasses = '', dataActionUrl = false, alpineAttributes = {}, attributes = {} %}

{% set buttonClasses = cva({
    base: 'font-bold rounded-md text-center border',
    variants: {
        color: {
            secondary: 'bg-secondary hover:bg-secondary-hover text-white border-secondary-ring',
            quaternary: 'bg-quaternary hover:bg-quaternary-hover text-white border-quaternary-ring',
            quinary: 'bg-quinary hover:bg-quinary-hover text-white border-quinary-ring',
            'accent-primary': 'bg-accent-primary hover:bg-accent-primary-hover text-white border-accent-primary-ring',
            danger: 'bg-danger hover:bg-danger-hover text-white border-danger-ring',
        },
        size: {
            xs: 'text-xs py-1.5 px-2',
            sm: 'text-xs py-1.5 px-2',
            md: 'text-sm py-2 px-4',
            lg: 'text-lg py-3 px-5',
        },
        fullWidth: {
            true: 'w-full block',
            false: '',
        },
        borderStyle: {
            solid: 'border-solid',
            dashed: 'border-dashed',
        },
        disabled: {
            true: 'cursor-not-allowed opacity-50',
            false: '',
        }
    }
}) %}

{% set actionUrl = route ? path(route, routeParams) : null %}
{% set expandedAlpineState = 'expanded' %}

{% if disabled %}
    <span id="{{ id }}" class="{{ buttonClasses.apply({color, size, fullWidth, borderStyle, disabled}) }} {{ extraClasses }}" title="{{ title }}" {{ buttonMacros.renderAlpineAttributes(alpineAttributes) }} {{ attributes|raw }}>
        {{ buttonMacros.renderContent(icon, label, iconPosition, expandedAlpineState) }}
    </span>
{% else %}
    {% if dataActionUrl %}
        <button id="{{ id }}" type="button" class="{{ buttonClasses.apply({color, size, fullWidth, borderStyle}) }} {{ extraClasses }}" title="{{ title }}" data-action-url="{{ actionUrl }}" {{ buttonMacros.renderAlpineAttributes(alpineAttributes) }} {{ attributes|raw }}>
            {{ buttonMacros.renderContent(icon, label, iconPosition, expandedAlpineState) }}
        </button>
    {% else %}
        <a href="{{ actionUrl }}" id="{{ id }}" class="{{ buttonClasses.apply({color, size, fullWidth, borderStyle}) }} {{ extraClasses }}" title="{{ title }}" {{ buttonMacros.renderAlpineAttributes(alpineAttributes) }} {{ attributes|raw }}>
            {{ buttonMacros.renderContent(icon, label, iconPosition, expandedAlpineState) }}
        </a>
    {% endif %}
{% endif %}
